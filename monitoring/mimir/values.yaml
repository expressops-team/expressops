metaMonitoring:
  serviceMonitor:
    enabled: true

ruler:
  enabled: true

mimir:
  config: |
    multitenancy_enabled: false
    
    activity_tracker:
      filepath: /active-query-tracker/activity.log
    
    prometheus:
      wal_directory: /data/wal
    
    blocks_storage:
      storage_prefix: blocks
      bucket_store:
        sync_dir: /data/tsdb-sync
      
      backend: s3
      s3:
        endpoint: mimir-minio.monitoring.svc.cluster.local:9000
        bucket_name: mimir-data
        access_key_id: mimir
        secret_access_key: supersecret
        insecure: true
    
    compactor:
      data_dir: /data/compactor
    
    distributor:
      ring:
        instance_addr: $(pod_ip)
        kvstore:
          store: memberlist
    
    ingester:
      ring:
        instance_addr: $(pod_ip)
        zone_awareness_enabled: true
        kvstore:
          store: memberlist
    
    ruler_storage:
      backend: s3
      s3:
        endpoint: mimir-minio.monitoring.svc.cluster.local:9000
        bucket_name: mimir-ruler
        access_key_id: mimir
        secret_access_key: supersecret
        insecure: true
    
    store_gateway:
      sharding_ring:
        instance_addr: $(pod_ip)
        zone_awareness_enabled: true
    
    alertmanager_storage:
      backend: s3
      s3:
        endpoint: mimir-minio.monitoring.svc.cluster.local:9000
        bucket_name: mimir-alertmanager
        access_key_id: mimir
        secret_access_key: supersecret
        insecure: true
    
    alertmanager:
      external_url: /alertmanager
    
    limits:
      accept_ha_samples: true
    
    prometheus_server:
      enable_api: true
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
      
      scrape_configs:
        - job_name: expressops-local
          scrape_interval: 5s
          metrics_path: /metrics
          static_configs:
            - targets:
              - localhost:8080
              
        - job_name: expressops
          scrape_interval: 15s
          metrics_path: /metrics
          kubernetes_sd_configs:
            - role: service
              namespaces:
                names:
                  - default
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: expressops
            - source_labels: [__meta_kubernetes_pod_container_port_name]
              action: keep
              regex: http|metrics
              
        - job_name: expressops-static
          static_configs:
            - targets: ['expressops.default.svc.cluster.local:8080']
          metrics_path: /metrics

querier:
  persistentVolume:
    enabled: true
    size: 1Gi

frontend:
  persistentVolume:
    enabled: true
    size: 1Gi

ingester:
  zoneAwareReplication:
    enabled: true

storeGateway:
  zoneAwareReplication:
    enabled: true

resources:
  requests:
    cpu: 100m
    memory: 128Mi

minio:
  enabled: true
  accessKey: mimir
  secretKey: supersecret
  buckets:
    - name: mimir-data
      policy: none
      purge: false
    - name: mimir-ruler
      policy: none
      purge: false
    - name: mimir-alertmanager
      policy: none
      purge: false 