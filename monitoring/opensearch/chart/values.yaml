replicas: 1 # Initial replica count --> KEDA manage scaling from this baseline up to its configured maximum
clusterName: opensearch
nodeGroup: standard

image:
  repository: europe-west1-docker.pkg.dev/fc-it-school-2025/opensearch-repo/opensearch
  imagePullPolicy: IfNotPresent
  tag: "3.0.0"

opensearchJavaOpts: "-Xms1g -Xmx1g"

config:
  opensearch.yml: |
    network.host: 0.0.0.0
    
    plugins.security.disabled: false
    plugins.security.ssl.http.enabled: true
    plugins.security.ssl.http.pemcert_filepath: /usr/share/opensearch/config/certs/node.pem
    plugins.security.ssl.http.pemkey_filepath: /usr/share/opensearch/config/certs/node-key.pem
    plugins.security.ssl.http.pemtrustedcas_filepath: /usr/share/opensearch/config/certs/root-ca.pem
    plugins.security.ssl.transport.enabled: true
    plugins.security.ssl.transport.pemcert_filepath: /usr/share/opensearch/config/certs/node.pem
    plugins.security.ssl.transport.pemkey_filepath: /usr/share/opensearch/config/certs/node-key.pem
    plugins.security.ssl.transport.pemtrustedcas_filepath: /usr/share/opensearch/config/certs/root-ca.pem
    plugins.security.allow_default_init_securityindex: true

    node.roles:
      - cluster_manager
      - data
      - ingest

    discovery.seed_hosts: ["opensearch-standard-headless.dav-monitoring.svc.cluster.local"]
    cluster.initial_cluster_manager_nodes: ["opensearch-standard-0"]

    plugins.query.datasources.encryption.masterkey: "A1B2C3D4E5F6G7H8"

resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "2Gi"

nodeSelector:
  role: opensearch-node

persistence:
  enabled: true
  storageClass: "juicefs-gcs-redis-canonica"
  size: 10Gi

singleNode: false

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchLabels:
            role: opensearch-node
        topologyKey: "kubernetes.io/hostname"

service:
  type: ClusterIP
  httpPort: 9200
  metricsPort: 9600

# ==== DOES NOT GENERATE THE CERTS AUTOMATICALLY ====
extraVolumes:
  - name: certs
    secret:
      secretName: opensearch-certs
  - name: gcp-creds
    secret:
      secretName: gcp-creds-for-eso #  existing secret

extraVolumeMounts:
  - name: certs
    mountPath: /usr/share/opensearch/config/certs
    readOnly: true
  - name: gcp-creds 
    mountPath: /usr/share/opensearch/config/gcs_credentials 
    readOnly: true

extraEnvs:
  - name: OPENSEARCH_USERNAME
    valueFrom:
      secretKeyRef:
        name: opensearch-credentials-secure
        key: username
  - name: OPENSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: opensearch-credentials-secure
        key: password
  - name: GOOGLE_APPLICATION_CREDENTIALS # Env var for GCS plugin
    value: /usr/share/opensearch/config/gcs_credentials/key.json # Path to the mounted key file

imagePullSecrets:
  - name: opensearch-registry-creds

extraPlugins:
  - opensearch-performance-analyzer
  - opensearch-knn
  - opensearch-saml
  - opensearch-alerting
  - opensearch-anomaly-detection
  - opensearch-index-management
  - opensearch-sql
  - opensearch-prometheus
  - opensearch-machine-learning
  - opensearch-observability
  - opensearch-reports
  - opensearch-gantt-chart
  - opensearch-visualizations
  - opensearch-repository-gcs

# TODO:
#snapshot repository

# opensearch-sql --> prometheus metrics