name: ExpressOps CI/CD

on:
  push:
    branches: [ rama_david, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ rama_david, master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true
      
      - name: Test
        run: go test -v ./...

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}
      image_name: davidnull/expressops
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata and determine primary tag
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: davidnull/expressops
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
      
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-helm-chart-dev:
    name: Update Helm Chart (Dev)
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    needs: build
    runs-on: ubuntu-latest
    outputs:
      new_image_tag: ${{ needs.build.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Install yq
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update image tag in values.yaml
        run: |
          IMAGE_TAG=${{ needs.build.outputs.image_tag }}
          echo "Using image tag: $IMAGE_TAG"
          yq e ".image.tag = \"$IMAGE_TAG\"" -i ./helm/values.yaml
          cat ./helm/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ./helm/values.yaml
          git commit -m "ci: Update image tag to ${{ needs.build.outputs.image_tag }} in Helm chart" || echo "No changes to commit"
          git push

  deploy-dev:
    name: Deploy to Development
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    needs: [build, update-helm-chart-dev]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud (Dev)
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_DEV }}'

      - name: Set up GKE credentials (Dev)
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ secrets.GKE_CLUSTER_NAME_DEV }}'
          location: '${{ secrets.GKE_CLUSTER_ZONE_DEV }}'
          project_id: '${{ secrets.GCP_PROJECT_ID_DEV }}'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.x'

      - name: Deploy to Dev Environment with Helm
        run: |
          echo "Deploying to development environment with image tag: ${{ needs.update-helm-chart-dev.outputs.new_image_tag }}"
          helm upgrade --install expressops ./helm \
            --namespace default \
            -f ./helm/values.yaml \
            --set image.tag=${{ needs.update-helm-chart-dev.outputs.new_image_tag }} \
            --create-namespace

  update-helm-chart-prod:
    name: Update Helm Chart (Prod)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    outputs:
      new_image_tag: ${{ needs.build.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Install yq
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update image tag in values.yaml
        run: |
          IMAGE_TAG=${{ needs.build.outputs.image_tag }}
          echo "Using image tag for prod: $IMAGE_TAG"
          yq e ".image.tag = \"$IMAGE_TAG\"" -i ./helm/values.yaml
          cat ./helm/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ./helm/values.yaml
          git commit -m "ci: Update image tag to ${{ needs.build.outputs.image_tag }} in Helm chart for production release" || echo "No changes to commit"
          git push

  deploy-prod:
    name: Deploy to Production
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build, update-helm-chart-prod]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud (Prod)
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_PROD }}'

      - name: Set up GKE credentials (Prod)
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ secrets.GKE_CLUSTER_NAME_PROD }}'
          location: '${{ secrets.GKE_CLUSTER_ZONE_PROD }}'
          project_id: '${{ secrets.GCP_PROJECT_ID_PROD }}'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.x'

      - name: Deploy to Production Environment with Helm
        run: |
          echo "Deploying to production environment with image tag: ${{ needs.update-helm-chart-prod.outputs.new_image_tag }}"
          helm upgrade --install expressops ./helm \
            --namespace default \
            -f ./helm/values.yaml \
            --set image.tag=${{ needs.update-helm-chart-prod.outputs.new_image_tag }} \
            --create-namespace 