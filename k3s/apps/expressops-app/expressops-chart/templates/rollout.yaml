{{- if .Values.rollouts.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "expressops-chart.fullname" . }}
  labels:
    {{- include "expressops-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "expressops-chart.selectorLabels" . | nindent 6 }}
  template: # La plantilla del Pod es idéntica a la de tu Deployment
    metadata:
      labels:
        {{- include "expressops-chart.selectorLabels" . | nindent 8 }}
        # Rollouts puede añadir etiquetas adicionales si es necesario para el análisis,
        # pero normalmente el pod-template-hash es suficiente.
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        envFrom:
        - secretRef:
            name: {{ .Values.slackSecretName }}
        - configMapRef:
            name: {{ include "expressops-chart.fullname" . }}-env
        args:
          {{- toYaml .Values.args | nindent 10 }}
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.yaml
          subPath: config.yaml
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 2
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "expressops-chart.fullname" . }}-config

  strategy:
    canary:
      # El servicio que siempre apunta a la versión estable
      stableService: {{ include "expressops-chart.fullname" . }}
      # El servicio que apuntará a los pods canary durante el rollout
      canaryService: {{ include "expressops-chart.canaryServiceName" . }}
      # Pasos para el despliegue canary
      steps:
      {{- if .Values.rollouts.steps }}
      {{- toYaml .Values.rollouts.steps | nindent 6 }}
      {{- else }}
      # Pasos por defecto si no se especifican en values.yaml
      - setWeight: 25
      - pause: {} # Pausa indefinida hasta promoción manual o análisis exitoso
      - setWeight: 50
      - pause: {duration: 10m} # Pausa por 10 minutos
      - setWeight: 75
      - pause: {duration: 10m}
      # El último paso implícito es setWeight: 100
      {{- end }}
      # Opcional: Configuración de Traffic Routing si usas un Ingress Controller o Service Mesh
      # trafficRouting:
      #   nginx: # Ejemplo para NGINX Ingress
      #     stableIngress: <nombre-del-ingress-estable>
      #     # annotationsPrefix: nginx.ingress.kubernetes.io # Si usas un prefijo no estándar
      #   # istio:
      #   #   virtualService:
      #   #     name: <nombre-del-virtualservice>
      #   #     routes:
      #   #     - primary # Nombre de la ruta en tu VirtualService
      #   # alb: # Ejemplo para AWS ALB Ingress Controller
      #   #   ingress: <nombre-del-ingress>
      #   #   servicePort: 80
      #   #   rootService: <nombre-del-servicio-raiz-para-ALB>
{{- end }}