{{- if not .Values.rollouts.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
#Unique name for this deployment release
  name: {{ include "expressops-chart.fullname" . }}
   #Standard tags to identify this resource
  labels:
  {{- include "expressops-chart.labels" . | nindent 4 }}

spec:
  replicas: {{ .Values.replicaCount}}
  selector:
  #Tags that the Deployment uses to find its Pods
    matchLabels:
      {{- include "expressops-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    #Tags that the Pods will have
      labels:
        {{- include "expressops-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
       #Use the chart name as the basis for the container name
      - name: {{ .Chart.Name }}
      #Image configured in values.yaml (with fallback to Chart.yaml appVersion)
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}" 
        ports:
        
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        #Converts the entire section of values.yaml to Yaml
        resources:
          {{- toYaml .Values.resources | nindent 10 }}

        envFrom:
         #Reference the secret created by externalsecret, using the name in values.yaml
        - secretRef:
        #name of the K8s secret managed by ESO
            name: {{ .Values.slackSecretName }}
        - configMapRef:
         # (fullname + suffix)
            name: {{ include "expressops-chart.fullname" . }}-env


        args:
          {{- toYaml .Values.args | nindent 10 }}

        volumeMounts:
        - name: config-volume
          mountPath: /app/config.yaml
          subPath: config.yaml

# Probes: Use the TargetPort from values.yaml for consistency
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 10
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 2
          periodSeconds: 5

      volumes:
      - name: config-volume
        configMap:
          name: {{ include "expressops-chart.fullname" . }}-config
{{- end }}
